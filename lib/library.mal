(def defun (macro (decl body & more) `(def ~(first decl) (fn ~(rest decl) ~body ~@more))))

; Stack data structure
(defun (stack-new) (atom ()))
(defun (stack-push s val) (do (swap! s (fn (s v) (cons v s)) val) val))
(defun (stack-top s) (first @s))
(defun (stack-pop s) (do (swap! s rest) nil))

